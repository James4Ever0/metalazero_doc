{
    "summary": "This code generates a random line from \"base.py\", replaces a word with \"__\" to form a question, and presents 3 hints to guess the replaced word. It continues until correct answer is given or an exception occurs.",
    "details": [
        {
            "comment": "This code generates a random line from \"base.py\", replaces a word with \"__\" to form a question, and presents 3 hints to guess the replaced word. It continues until correct answer is given or an exception occurs.",
            "location": "\"/media/root/Prima/works/generated_docs/metalazero_doc/src/tools/deep-text-editor/neural_network/make_hint_quiz.py\":0-35",
            "content": "truth=open(\"base.py\",\"r\").read().split(\"\\n\")\ntruth=list(filter(lambda x: len(x)> 2, truth))\nclass mylist(list):\n    def __sub__(self, other):\n        return [x for x in self if x not in other]\ntruth=mylist(truth)\nimport random\nimport traceback\nwhile True:\n    try:\n        r=random.choice(truth)\n        r0=r.split()\n        r0=random.choice(r0)\n        r1=r.replace(r0,\"___\")\n        print(\"question:\",r1)\n        hints=truth - mylist([r])\n        random.shuffle(hints)\n        hints=hints[:3]\n        for x in range(3):\n            ans=input(\"answer:\\n\")\n            if ans == r0:\n                print(\"correct!\")\n                break\n            else:\n                print(\"incorrect!\")\n                print(\"the correct answer is:\", r0)\n                print(\"your answer is:\", ans)\n                print(\"hint:\",hints.pop())\n        print(\"correct form:\",r)\n        print(\"continue?\")\n        input()\n    except:\n        traceback.print_exc()\n        print(\"exception printed above!\")\n        pass"
        }
    ]
}